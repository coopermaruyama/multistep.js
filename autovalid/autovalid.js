// Generated by CoffeeScript 1.3.3
(function() {
  var $;

  window.nameinput = {
    maxlength: 35,
    lettersonly: true,
    regex: /^[a-zA-Z ]+$/,
    notblank: true
  };

  window.emailinput = {
    malength: 35,
    regex: /^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/
  };

  window.isblank = function(str) {
    if (str.length === 0) {
      return true;
    } else {
      return false;
    }
  };

  window.tooLong = function(string, maxlength) {
    if (string.length <= maxlength) {
      return false;
    } else {
      return true;
    }
  };

  window.tooShort = function(string, minlength) {
    if (string.length >= minlength) {
      return false;
    } else {
      return true;
    }
  };

  window.validateText = function(text, min, max) {
    var increment, totalitems, validitems;
    validitems = 0;
    totalitems = 3;
    if (min == null) {
      min = 3;
    }
    if (max == null) {
      max = 35;
    }
    increment = function() {
      return validitems++;
    };
    if (!isblank(text)) {
      increment();
    }
    if (!tooShort(text, min)) {
      increment();
    }
    if (!tooLong(text, max)) {
      increment();
    }
    if (validitems < totalitems) {
      return false;
    } else {
      return true;
    }
  };

  window.validateEmail = function(email) {
    var increment, totalitems, validitems;
    validitems = 0;
    totalitems = 1;
    increment = function() {
      return validitems++;
    };
    if (emailinput.regex.test(email)) {
      increment();
    }
    if (validitems < totalitems) {
      return false;
    } else {
      return true;
    }
  };

  window.isPhone = function(input) {
    var regex;
    regex = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})\s*[-. ]?\s*([0-9]{4})$/;
    return regex.test(input);
  };

  window.is_int = function(value) {
    if (parseFloat(value) === parseInt(value) && !isNaN(value)) {
      return true;
    } else {
      return false;
    }
  };

  $ = jQuery;

  $.fn.extend({
    autoValid: function(options) {
      var currentStep, form, log, settings, step;
      settings = {
        debug: true,
        progressbar: true
      };
      settings = $.extend(settings, options);
      log = function(msg) {
        if (settings.debug) {
          return typeof console !== "undefined" && console !== null ? console.log(msg) : void 0;
        }
      };
      this.addClass('autovalid-form');
      this.find('.step').first().css('display', 'block');
      this.find('.step:not(:first)').append('<a href="#" class="back"></a>');
      window.valid = false;
      form = this;
      step = $('.step', this);
      currentStep = 0;
      $("input:not([type=image],[type=button],[type=submit],[type=radio],[type=checkbox])", form).keyup(function() {
        var min, _ref;
        min = (_ref = ($(this)).attr('min')) != null ? _ref : 3;
        if (!(($(this)).attr('optional') === "yes" || ($(this)).val().length < min)) {
          if (validateText($(this).val(), min, $(this).attr('max'))) {
            return $(this).removeClass('error').addClass('success').attr('valid', 'true');
          } else {
            return $(this).removeClass('success').addClass('error').attr('valid', 'false');
          }
        }
      });
      ($('input.phone', form)).change(function() {
        if (isPhone($(this).val())) {
          return $(this).removeClass('error').addClass('success').attr('valid', 'true');
        } else {
          return $(this).removeClass('success').addClass('error').attr('valid', 'false');
        }
      });
      ($('input.email', form)).change(function() {
        if (validateEmail($(this).val())) {
          $(this).removeClass('error').addClass('success').attr('valid', 'true');
        } else {
          $(this).removeClass('success').addClass('error').attr('valid', 'false');
        }
        if ($(this).val() != null) {
          return $(this).addClass('success');
        } else {
          return $(this).addClass('error');
        }
      });
      ($('input[type=radio]', form)).change(function() {
        var name;
        name = $(this).attr('name');
        if ($('input[name=' + name + ']').is(':checked')) {
          return $('.error-text.radio').remove();
        } else {
          return $('input[name=' + name + ']').first().before('<p class="error-text radio">Select an option!</p>');
        }
      });
      ($('input[type=checkbox]', form)).change(function(e) {
        var max, min;
        min = 1;
        max = 9999;
        if ($('input[name=' + $(this).prop('name') + ']').first().attr('min') != null) {
          min = $('input[name=' + $(this).prop('name') + ']').first().attr('min').match(/\d+/);
        }
        if ($('input[name=' + $(this).prop('name') + ']').first().attr('max') != null) {
          max = $('input[name=' + $(this).prop('name') + ']').first().attr('max').match(/\d+/);
        }
        if ($('input[name=' + $(this).prop('name') + ']').is(':checked') && $('input[name=checks]:checked').length <= max && $('input[name=checks]:checked').length >= min) {
          return $('.error-text.checkbox').remove();
        } else {
          $('.error-text.checkbox').remove();
          return $('input[name=' + $(this).prop('name') + ']').first().before('<p class="error-text checkbox">Select at least ' + min + ' boxes!</p>');
        }
      });
      ($('select', form)).change(function() {
        if (($(this).val() != null) && ($(this)).val() !== '') {
          return $(this).removeClass('error');
        } else {
          return $(this).addClass('error');
        }
      });
      ($('textarea', form)).change(function() {
        if (($(this).val() != null) && ($(this)).val() !== '') {
          return $(this).removeClass('error').addClass('success').attr('valid', 'true');
        } else {
          return $(this).removeClass('success').addClass('error').attr('valid', 'false');
        }
      });
      $('.step .submit', form).click(function(e) {
        var progress, thisStep;
        thisStep = $(this).closest('.step');
        e.preventDefault();
        window.totalitems = 0;
        window.validitems = 0;
        $('input:not([type=image],[type=button],[type=submit],[type=radio],[type=checkbox]):visible', thisStep).each(function() {
          window.totalitems++;
          if ($(this).attr('valid') === 'true' || ($(this)).attr('optional') === "yes") {
            window.validitems++;
          } else {
            $(this).removeClass('success').addClass('error').focus();
            false;
          }
          return log(validitems + " " + totalitems);
        });
        ($('textarea', thisStep)).each(function() {
          window.totalitems++;
          if ($(this).attr('valid') === 'true' || ($(this)).attr('optional') === "yes") {
            return window.validitems++;
          } else {
            $(this).removeClass('success').addClass('error').focus();
            return false;
          }
        });
        $('select:visible', thisStep).each(function() {
          window.totalitems++;
          if (($(this).val() != null) && $(this).val() !== "") {
            window.validitems++;
            return $(this).removeClass('error');
          } else {
            return $(this).addClass('error');
          }
        });
        $('input[type=radio]', thisStep).each(function() {
          var name;
          name = $(this).attr('name');
          window.totalitems++;
          if ($('input[name=' + name + ']').is(':checked') || $('input[name=' + name + ']:hidden').length || $('input[name=' + name + '][optional=yes]').length) {
            window.validitems++;
          } else {
            $('.error-text.radio').remove();
            $('input[name=' + name + ']').first().before('<p class="error-text radio">Select an option!</p>');
          }
          return log(validitems + " " + totalitems);
        });
        $('input[type=checkbox]', thisStep).each(function() {
          var max, min, name;
          window.totalitems++;
          min = 1;
          max = 9999;
          if ($('input[name=' + $(this).prop('name') + ']').first().attr('min') != null) {
            min = $('input[name=' + $(this).prop('name') + ']').first().attr('min').match(/\d+/);
          }
          if ($('input[name=' + $(this).prop('name') + ']').first().attr('max') != null) {
            max = $('input[name=' + $(this).prop('name') + ']').first().attr('max').match(/\d+/);
          }
          name = $(this).attr('name');
          if ($('input[name=' + $(this).prop('name') + ']').is(':checked') && $('input[name=checks]:checked').length <= max && $('input[name=checks]:checked').length >= min || $('input[name=' + $(this).prop('name') + ']').length) {
            $('.error-text.checkbox').remove();
            window.validitems++;
          } else {
            $('.error-text.checkbox').remove();
            $('input[name=' + $(this).prop('name') + ']').first().before('<p class="error-text checkbox">Select at least ' + min + ' boxes!</p>');
          }
          return console.log(validitems, totalitems);
        });
        if (window.totalitems === window.validitems) {
          if (thisStep.attr('id') !== "last-step") {
            thisStep.slideUp();
            thisStep.next('.step').slideDown();
            currentStep++;
            progress = currentStep / ($('.step', form)).size();
            return $('.progress').css('width', progress * 100 + "%");
          } else {
            return form.submit();
          }
        }
      });
      return $('.back', form).click(function(e) {
        var progress;
        e.preventDefault();
        log('clicked');
        ($(this)).closest('.step').slideUp();
        ($(this)).closest('.step').prev('.step').slideDown();
        currentStep--;
        progress = currentStep / ($('.step', form)).size();
        return $('.progress').css('width', progress * 100 + "%");
      });
    }
  });

}).call(this);
